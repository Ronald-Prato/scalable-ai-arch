{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///home/mcka_ron/Documents/develop/scalable-ia/src/app/api/summary/route.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { NextResponse } from \"next/server\";\nimport OpenAI from \"openai\";\n\nexport async function POST(request: Request) {\n  try {\n    // Parse the request body\n    const body = await request.json();\n    const { text } = body;\n\n    // Initialize OpenAI client with API key from environment variable\n    const openai = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    });\n\n    const promptTranca = `\n      Necesito que hagas un resumen de la siguiente entrada:\n      ${text}\n\n      Sigue la siguiente estructura:\n      Resumen: \n      [resumen]\n\n      Puntos clave:\n      [puntos clave]\n\n\n      Formato html, usa negritas, cursivas, listas, etc para que el resumen sea más legible.\n      estiliza el texto con inner css para que los título (resumen y puntos clave) sean más visibles.\n    `;\n\n    const promptHardcore = `\n      Necesito que hagas un resumen de la siguiente entrada:\n      ${text}\n\n      Sigue la siguiente estructura:\n      Resumen: \n      [resumen]\n\n      Puntos clave:\n      [puntos clave]\n\n      Análisis:\n      [necesito que hagas un análisis de la entrada, que vaya desde sentimientos de quien lo escribe hasta un desgloce completo\n      en qué sirve esta información para entenderla psicología del autor, el resumen debe ser extenso y detallado]\n\n      Formato html, usa negritas, cursivas, listas, etc para que el resumen sea más legible.\n    `;\n\n    // Call OpenAI API\n    const chatCompletion = await openai.chat.completions.create({\n      messages: [\n        {\n          role: \"system\",\n          content:\n            \"Eres un asistente experto en hacer resúmenes detallados pero cortos.\",\n        },\n        { role: \"user\", content: promptTranca },\n      ],\n      model: \"gpt-3.5-turbo\",\n    });\n\n    // Get the response from OpenAI\n    const aiResponse = chatCompletion.choices[0].message.content;\n\n    // Return the response\n    return NextResponse.json({ message: aiResponse });\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    return NextResponse.json(\n      { error: \"Failed to process OpenAI request\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA,oDAAoD;;;AACpD;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,yBAAyB;QACzB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,kEAAkE;QAClE,MAAM,SAAS,IAAI,sMAAA,CAAA,UAAM,CAAC;YACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc;QACpC;QAEA,MAAM,eAAe,CAAC;;MAEpB,EAAE,KAAK;;;;;;;;;;;;IAYT,CAAC;QAED,MAAM,iBAAiB,CAAC;;MAEtB,EAAE,KAAK;;;;;;;;;;;;;;IAcT,CAAC;QAED,kBAAkB;QAClB,MAAM,iBAAiB,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAC1D,UAAU;gBACR;oBACE,MAAM;oBACN,SACE;gBACJ;gBACA;oBAAE,MAAM;oBAAQ,SAAS;gBAAa;aACvC;YACD,OAAO;QACT;QAEA,+BAA+B;QAC/B,MAAM,aAAa,eAAe,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;QAE5D,sBAAsB;QACtB,OAAO,qOAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAW;IACjD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,qOAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAmC,GAC5C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}