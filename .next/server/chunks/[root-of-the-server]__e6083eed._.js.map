{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/mcka_ron/Documents/develop/scalable-ia/src/app/api/summary/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport async function POST(request: Request) {\n  try {\n    // Parse the request body\n    const body = await request.json();\n    const { text } = body;\n\n    // Simulate a 4-second processing time\n    await new Promise((resolve) => setTimeout(resolve, 4000));\n\n    // Process the text and generate a summary\n    // This is where your actual summary logic would go\n    const summary = `Summary of: ${text.substring(0, 50)}${\n      text.length > 50 ? \"...\" : \"\"\n    }`;\n\n    // Return the response\n    return NextResponse.json({ message: summary });\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    return NextResponse.json(\n      { error: \"Failed to process summary\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,yBAAyB;QACzB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,sCAAsC;QACtC,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;QAEnD,0CAA0C;QAC1C,mDAAmD;QACnD,MAAM,UAAU,CAAC,YAAY,EAAE,KAAK,SAAS,CAAC,GAAG,MAC/C,KAAK,MAAM,GAAG,KAAK,QAAQ,IAC3B;QAEF,sBAAsB;QACtB,OAAO,qOAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAQ;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,qOAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}